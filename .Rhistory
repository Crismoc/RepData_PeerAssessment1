axis(side = 1, at = seq(1999, 2008, by = 3))
box()
dev.copy(png, file = "plot5.png", height = 480, width = 660)
dev.off()
MVS <- unique(grep("Vehicles", SCC$EI.Sector, ignore.case = TRUE, value = TRUE))
MVSC <- SCC[SCC$EI.Sector %in% MVS, ]["SCC"]
EMVB <- NEI[NEI$SCC %in% MVSC$SCC & NEI$fips == "24510", ]
EMVLA <- NEI[NEI$SCC %in% MVSC$SCC & NEI$fips == "06037", ]
EMVBLA <- rbind(EMVB, EMVLA)
TMVEYC <- aggregate(Emissions ~ fips * year, data = EMVBLA, FUN = sum)
TMVEYC$county <- ifelse(TMVEYC$fips == "06037", "Los Angeles", "Baltimore")
library(ggplot2)
q <- qplot(y = Emissions, x = year, data = TMVEYC, color = county)
plot6 <- q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + geom_point(size = 4) + geom_line() + labs(x = "") + labs(y = expression("Motor  Vehicle " * PM[2.5] * " (tons)")) +
labs(title = expression("Motor  Vehicle Related PM" [2.5] * " Emissions in Baltimore & Los Angeles (1999 - 2008)")) +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 14), panel.margin = unit(1, "lines"), plot.title = element_text(vjust = 2, hjust = 0.17, size = 12), legend.title = element_text(size = 11)) + scale_colour_discrete(name = "County")
print(plot6)
plot6 <- q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + geom_point(size = 4) + geom_line() + labs(x = "") + labs(y = expression("Motor  Vehicle " * PM[2.5] * " (tons)")) +
labs(title = expression("Motor  Vehicle Related PM" [2.5] * " Emissions in Baltimore & Los Angeles (1999 - 2008)")) +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), panel.margin = unit(1, "lines"), plot.title = element_text(vjust = 2, hjust = 0.17, size = 12), legend.title = element_text(size = 11)) + scale_colour_discrete(name = "County")
print(plot6)
q <- qplot(y = Emissions, x = year, data = TMVEYC, color = county)
plot6 <- q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + geom_point(size = 4) + geom_line() + labs(x = "") + labs(y = expression("Motor  Vehicle " * PM[2.5] * " (tons)")) +
labs(title = expression("Motor  Vehicle Related PM" [2.5] * " Emissions in Baltimore & Los Angeles (1999 - 2008)")) +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), panel.margin = unit(1, "lines"), plot.title = element_text(vjust = 2, hjust = 0.17, size = 12), legend.title = element_text(size = 11)) + scale_colour_discrete(name = "County")
print(plot6)
plot6 <- q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + geom_point(size = 4) + geom_line() + labs(x = "") + labs(y = expression("Motor  Vehicle " * PM[2.5] * " (tons)")) +
labs(title = expression("Motor  Vehicle Related PM" [2.5] * " Emissions in Baltimore & Los Angeles (1999 - 2008)")) +
theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), panel.margin = unit(1, "lines"), plot.title = element_text(vjust = 2, hjust = 0.17, size = 12), legend.title = element_text(size = 11)) + scale_colour_discrete(name = "County")
print(plot6)
plot6 <- q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + geom_point(size = 4) + geom_line() + labs(x = "") + labs(y = expression("Motor  Vehicle " * PM[2.5] * " (tons)")) +
labs(title = expression("Motor  Vehicle Related PM" [2.5] * " Emissions in Baltimore & Los Angeles (1999 - 2008)")) +
scale_colour_discrete(name = "County")
print(plot6)
dev.copy(png, file = "plot6.png", height = 480, width = 660)
dev.off()
plot6 <- q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + geom_point(size = 4) + geom_line() + labs(x = "") + labs(y = expression("Motor  Vehicle " * PM[2.5] * " (tons)")) +
labs(title = expression("PM" [2.5] * " Emissions in Baltimore & Los Angeles (1999 - 2008)")) +
scale_colour_discrete(name = "County")
print(plot6)
dev.copy(png, file = "plot6.png", height = 480, width = 660)
dev.off()
q <- qplot(y = Emissions, x = year, data = TMVEYC, color = county)
plot6 <- q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + geom_point(size = 4) + geom_line() + labs(x = "") + labs(y = expression("Motor  Vehicle " * PM[2.5] * " (tons)")) +
labs(title = expression("PM" [2.5] * " Emissions in Baltimore & Los Angeles (1999 - 2008)")) +
scale_colour_discrete(name = "County")
print(plot6)
dev.copy(png, file = "plot6.png", height = 480, width = 660)
dev.off()
q <- qplot(y = Emissions, x = year, data = TMVEYC, color = county)
plot6 <- q + scale_x_continuous(breaks = seq(1999, 2008, 3)) + geom_point(size = 4) + geom_line() + labs(x = "") + labs(y = expression("PM"[2.5] * " (tons)")) +
labs(title = expression("Motor  Vehicle Related PM" [2.5] * " Emissions in Baltimore & Los Angeles (1999 - 2008)")) +
scale_colour_discrete(name = "County")
print(plot6)
dev.copy(png, file = "plot6.png", height = 480, width = 660)
dev.off()
par(mar = c(4.4,4.4,2.9,2.5))
plot(PM25_YEAR$Year, PM25_YEAR$Emissions, type = "l", xlab = "", ylab = expression("PM"[2.5]*"(tons)"), main = expression("Evolution of PM"[2.5]*" Total Emissions in the US (1999 - 2008)"))
dev.copy(png, file = "plot1.png", height = 480, width = 660)
dev.off()
plot(PM25_YEAR$Year, PM25_YEAR$Emissions, type = "l", xlab = "", ylab = expression("PM"[2.5]*"(tons)"), main = expression("Evolution of PM"[2.5]*" Total Emissions in the US (1999 - 2008)"))
plot(PM25_YEAR$Year, PM25_YEAR$Emissions, type = "h", xlab = "", ylab = expression("PM"[2.5]*"(tons)"), main = expression("Evolution of PM"[2.5]*" Total Emissions in the US (1999 - 2008)"))
NEI$yearf <- factor(NEI$year)
PM25_YEAR <- aggregate(NEI$Emissions, by = list(NEI$yearf), FUN = sum)
colnames(PM25_YEAR) <- c("Year", "Emissions")
par(mar = c(4.4,4.4,2.9,2.5))
plot(PM25_YEAR$Year, PM25_YEAR$Emissions, type = "l", xlab = "", ylab = expression("PM"[2.5]*"(tons)"), main = expression("Evolution of PM"[2.5]*" Total Emissions in the US (1999 - 2008)"))
dev.copy(png, file = "plot1.png", height = 480, width = 660)
dev.off()
?plot
plot(PM25_YEAR$Year, PM25_YEAR$Emissions, col = "red", type = "l", xlab = "", ylab = expression("PM"[2.5]*"(tons)"), main = expression("Evolution of PM"[2.5]*" Total Emissions in the US (1999 - 2008)"))
dev.copy(png, file = "plot1.png", height = 480, width = 660)
dev.off()
plot(PM25_YEAR$Year, PM25_YEAR$Emissions, col = "green", type = "l", xlab = "", ylab = expression("PM"[2.5]*"(tons)"), main = expression("Evolution of PM"[2.5]*" Total Emissions in the US (1999 - 2008)"))
plot(PM25_YEAR$Year, PM25_YEAR$Emissions, pch = 21, col = "red", type = "l", xlab = "", ylab = expression("PM"[2.5]*"(tons)"), main = expression("Evolution of PM"[2.5]*" Total Emissions in the US (1999 - 2008)"))
plot(PM25_YEAR$Year, PM25_YEAR$Emissions, pch = 21, col = "red", type = "l", xlab = "", ylab = expression("PM"[2.5]*"(tons)"), main = expression("Evolution of PM"[2.5]*" Total Emissions in the US (1999 - 2008)"))
PM25_YEAR <- aggregate(NEI$Emissions, by = list(NEI$yearf), FUN = sum)
colnames(PM25_YEAR) <- c("Year", "Emissions")
par(mar = c(4.4,4.4,2.9,2.5))
plot(PM25_YEAR$Year, PM25_YEAR$Emissions, pch = 21, col = "red", type = "l", xlab = "", ylab = expression("PM"[2.5]*"(tons)"), main = expression("Evolution of PM"[2.5]*" Total Emissions in the US (1999 - 2008)"))
plot(PM25_YEAR$Year, PM25_YEAR$Emissions, type = "l", xlab = "", ylab = expression("PM"[2.5]*"(tons)"), main = expression("Evolution of PM"[2.5]*" Total Emissions in the US (1999 - 2008)"))
dev.copy(png, file = "plot1.png", height = 480, width = 660)
dev.off()
?CD
??CD()
setwd("C:/Users/Cristobal/Dropbox/Data Science Coursera/5 Reproducible Research/RepData_PeerAssessment1")
source('C:/Users/Cristobal/Dropbox/Data Science Coursera/4 Exploratory Data Analysis/Course Project 2/plot2.R')
unzip("activity.zip")
setwd("C:/Users/Cristobal/Dropbox/Data Science Coursera/5 Reproducible Research/RepData_PeerAssessment1")
unzip("activity.zip")
read.csv("activity.csv")
data <- read.csv("activity.csv")
summary(dat)
sum(dat)
summary(data)
names(data)
str(data)
ggplot(data, aes(x=mean(steps), y=factor(date))) + geom_bar()
library(ggplot)
library(ggplot2)
install.packages("ggplot2")
ggplot(data, aes(x=mean(steps), y=factor(date))) + geom_bar()
plot(data, aes(x=mean(steps), y=factor(date))) + geom_bar()
plot(data$steps, data$date, type="l")
head(data)
tail(data)
class(data$date)
plot(data$date, data$steps, type="l")
library(dplyr)
install.packages("dplyr")
data2 <- group_by(data, date)
library(dplyr)
data2 <- group_by(data, date)
data2
data2 <- group_by(data, date) %>%
filter(!is.na(steps)) %>%
summarise(steps = mean(steps))
data2
qplot(data2 date ~ steps)
?qplot
?qplot()
library(lattice)
qplot(data2 date ~ steps)
qplot(data2, date ~ steps)
?qplot()
library(ggplot2)
qplot(data2, date ~ steps)
qplot(data2, steps by date)
?qplot()
qplot(steps, date, data2)
?qplot()
qplot(steps, date, data=data2)
qplot(date, steps, data=data2)
?group_by
data2 <- group_by(data, date) %>%
filter(!is.na(steps)) %>%
summarise(totalsteps = sum(steps), steps = mean(steps))
data2
data2 <- group_by(data, date) %>%
filter(!is.na(steps)) %>%
summarise(totalsteps = sum(steps), steps = mean(totalsteps))
data2
data2 <- group_by(data, date) %>%
filter(!is.na(steps)) %>%
summarise(totalsteps = sum(steps))
data2
data2 <- group_by(data, date) %>%
summarise(totalsteps = sum(steps))
data2
qplot(totalsteps, date, data=data2)
qplot(steps, date, data=data2)
qplot(steps, date, data=data2)
qplot(totalsteps, date, data=data2)
qplot(date, totalsteps, data=data2)
mean(data2$total_steps)
mean(data2$total_steps, na.rm=TRUE)
class(data2$total_steps)
View(data2)
mean(data2$totalsteps, na.rm=TRUE)
mean(data2$totalsteps)
med(data2$totalsteps, na.rm=TRUE)
md(data2$totalsteps, na.rm=TRUE)
median(data2$totalsteps, na.rm=TRUE)
class(data2$date)
mutate(data2, as.Date(date, "%d%m%y")
)
mutate(data2, as.Date(date)
)
mutate(data2, date2(as.Date(date)))
mutate(data2, date2 = as.Date(date))
data3 <- mutate(data2, date2 = as.Date(date))
class(data3$date2)
data3 <- mutate(data2, date2 = as.Date(date, %d%m%y))
data3 <- mutate(data2, date2 = as.Date(date, "%d%m%y))
)
)
))
""
"
data3 <- mutate(data2, date2 = as.Date(date, "%d%m%y"))
data3
data3 <- mutate(data2, date2 = as.Date(date))
data3 <- mutate(data2, date2 = as.Date(date))
data3
data4 <- mutate(data3, date = as.Date(date2, "%d%m%y"))
data4
data4 <- mutate(data3, Date = as.Date(date2, "%d%m%y"))
data4
?as.Date
data2$date <- as.character(data2$date)
class(data2$date)
data2$date <- as.Date(data2$date, "%d%m%y")
data2
data2 <- group_by(data, date) %>%
filter(!is.na(steps)) %>%
summarise(total_steps = sum(steps))
hist(data2$total_steps)
qplot(data2$total_steps)
qplot(data2$total_steps, binwidth = 50)
qplot(data2$total_steps, binwidth = range/20)
qplot(data2$total_steps, binwidth = 100)
qplot(data2$total_steps, binwidth = 1000)
qplot(data2$total_steps, binwidth = 1500)
qplot(data2$total_steps, binwidth = 1750)
hist(data2$total_steps)
qplot(data2$total_steps, binwidth = 5000)
qplot(total_steps, binwidth = 5000)
qplot(data2, total_steps, binwidth = 5000)
qplot(data2[,2], total_steps, binwidth = 5000)
qplot(data2[,2], total_steps, binwidth = 5000)
qplot(total_steps, binwidth = 5000, data=data2)
qplot(total_steps, binwidth = 5000, col="green",data=data2)
hist(data2$total_steps)
?median
hist(data2$total_steps, col="green")
hist(data2$total_steps, col="blue")
hist(data2$total_steps, col="black")
hist(data2$total_steps, col="red")
Sys.setlocale()
Sys.setlocale("LC_TIME", "English")
Sys.setlocale()
Sys.setlocale("LC_TIME", "English")
View(data)
data3 <- group_by(data, interval) %>%
summarise(total_steps = mean(steps))
data3
data3 <- group_by(data, interval) %>%
filter(!is.na(steps)) %>%
summarise(total_steps = mean(steps))
data3 <- group_by(data, interval) %>%
filter(!is.na(steps)) %>%
summarise(total_steps = mean(steps))
data3 <- group_by(data, interval) %>%
filter(!is.na(steps)) %>%
summarise(total_steps = mean(steps))
data3
qplot(avg_steps)
data3 <- group_by(data, interval) %>%
filter(!is.na(steps)) %>%
summarise(avg_steps = mean(steps))
data3 <- group_by(data, interval) %>%
filter(!is.na(steps)) %>%
summarise(avg_steps = mean(steps))
qplot(avg_steps)
qplot(avg_steps, data=data3)
data3 <- group_by(data, interval) %>%
filter(!is.na(steps)) %>%
summarise(avg_steps = mean(steps > 0))
qplot(avg_steps, data=data3)
data3 <- group_by(data, interval) %>%
filter(!is.na(steps)) %>%
summarise(avg_steps = mean(steps))
qplot(avg_steps > 0, data=data3)
qplot(avg_steps, data=data3)
View(data4)
View(data3)
plot(interval, avg_steps, data=data3)
qplot(interval, avg_steps, data=data3)
qplot(interval, avg_steps, data=data3, type="l")
plot(data3$interval, data3avg_steps)
plot(data3$interval, data$avg_steps)
plot(data3$interval ~ data$avg_steps)
plot(data$avg_steps, data3$interval)
plot(data3$avg_steps, data3$interval)
plot(data3$interval, data3$avg_steps)
plot(data3$interval, data3$avg_steps, type="l")
plot(data3$interval, data3$avg_steps, type="l", col="red")
?plot
plot(data3$interval, data3$avg_steps, type="l", col="red", main="Daily Activity Pattern")
plot(data3$interval, data3$avg_steps, type="l", col="red", main="Daily Activity Pattern", x.lab="Interval", y.lab"Average of steps")
plot(data3$interval, data3$avg_steps, type="l", col="red", main="Daily Activity Pattern", x.lab="Interval", y.lab="Average of steps")
plot(data3$interval, data3$avg_steps, type="l", col="red", main="Daily Activity Pattern", xlab="Interval", ylab="Average of steps")
plot(data3$interval, data3$avg_steps, type="l", col="red", main="Daily Activity Pattern", xlab="5-minute Interval", ylab="Average of Steps")
max(data3$avg_steps)
n(max(data3$avg_steps))
which(max(data3$avg_steps))
?which
?with
with(max(data3$avg_steps))
with(data3$interval(max(data3$avg_steps)))
with(data3, interval[max(data3$avg_steps)])
View(data3)
with(data3, interval[max(avg_steps)])
View(data3)
with(data3, interval[avg_steps == 206.1698])
with(data3, interval[avg_steps == 206.1698])
data3[which.max(data3[,2]), 1]
data3[which.max(data3$avg_steps), 1]
data3[which.max(data3$avg_steps), interval]
data3[which.max(data3$avg_steps), data3$interval]
data3[which.max(data3$avg_steps) data3$interval]
data3[which.max(data3$avg_steps), 1]
data3[which.na(data3$avg_steps)]
n(is.na(data3$avg_steps))
?n()
n(data3, is.na(avg_steps))
sum(is.na(avg_steps))
sum(is.na(data3$avg_steps))
sum(is.na(data2$total_steps))
sum(is.na(data$steps))
data <- read.csv("activity.csv")
library(ggplot2)
library(dplyr)
data2 <- group_by(data, date) %>%
filter(!is.na(steps)) %>%
summarise(total_steps = sum(steps))
data3 <- group_by(data, interval) %>%
filter(!is.na(steps)) %>%
summarise(avg_steps = mean(steps))
data3[which.max(data3$avg_steps), 1]
sum(is.na(data$steps))
dataNA <- group_by(data, interval) %>%
summarise(avg_steps = mean(steps)) %>%
dataNA$avg_steps[dataNA$avg_steps==NA] <- mean(dataNA$avg_steps)
dataNA <- group_by(data, interval) %>%
summarise(avg_steps = mean(steps))
dataNA$avg_steps[dataNA$avg_steps==NA] <- mean(dataNA$avg_steps)
sum(is.na(dataNA$avg_steps))
dataNA <- group_by(data, interval) %>%
summarise(avg_steps = mean(steps))
sum(is.na(dataNA$avg_steps))
dataNA$avg_steps[dataNA$avg_steps==NA] <- mean(dataNA$avg_steps, na.rm=TRUE)
sum(is.na(dataNA$avg_steps))
View(dataNA)
dataNA <- data
sum(is.na(dataNA$steps))
dataNA$steps[dataNA$steps==NA] <- group_by(data, interval) %>%
summarise(avg_steps = mean(steps, na.rm=TRUE))
?impute
library(Hmisc)
install.packages("Hmisc")
dataNA$steps[dataNA$steps==NA] <- group_by(data, interval) %>%
summarise(avg_steps = mean(steps, na.rm=TRUE))
dataNA <- data
impute
sum(is.na(dataNA$steps))
dataNA$steps[dataNA$steps==NA] <- mean(dataNA$steps, na.rm=TRUE)
sum(is.na(dataNA$steps))
View(dataNA)
dataNA$steps[dataNA$steps=="NA"] <- mean(dataNA$steps, na.rm=TRUE)
View(dataNA)
?ddply
library(plyr)
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
dataNA2 <- ddply(dataNA, ~ interval, transform, steps = impute.mean(steps))
sum(is.na(dataNA2$steps))
sum(is.na(dataNA$steps))
View(dataNA2)
dataNA2[order(dataNA2$date), ]
dataNA2 <- dataNA2[order(dataNA2$date), ]
View(dataNA)
View(dataNA2)
?select
View(dataNA2)
dataNA2[1,1]
names(dataNA2)
dataNA2 <- select(dataNA2, 1:3)
View(dataNA2)
?order
hist(dataNA$steps, col="red")
mean(dataNA$total_steps)
dataNA2 <- group_by(dataNA, date) %>%
filter(!is.na(steps)) %>%
summarise(total_steps = sum(steps))
hist(dataNA2$steps, col="red")
mean(dataNA2$total_steps)
median(dataNA2$total_steps)
hist(dataNA2$total_steps, col="red")
dataNA2 <- group_by(dataNA, date) %>%
summarise(total_steps = sum(steps))
hist(dataNA2$total_steps, col="red")
mean(dataNA2$total_steps)
median(dataNA2$total_steps)
View(dataNA2)
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
dataNA <- ddply(data, ~ interval, transform, steps = impute.mean(steps))
dataNA <- dataNA[order(dataNA$date), ]
dataNA2 <- group_by(dataNA, date) %>%
summarise(total_steps = sum(steps))
hist(dataNA2$total_steps, col="red")
mean(dataNA2$total_steps)
median(dataNA2$total_steps)
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
dataNA <- ddply(data, ~ interval, transform, steps = impute.mean(steps))
dataNA <- dataNA[order(dataNA$date), ]
dataNA2 <- group_by(dataNA, date) %>%
summarise(total_steps = sum(steps))
View(dataNA2)
View(dataNA)
class(dataNA$date)
dataNA2 <- group_by(dataNA, date) %>%
summarise(total_steps = sum(steps))
dataNA2 <- group_by(dataNA, date) %>%
summarise(total_steps = sum(steps))
data <- read.csv("activity.csv")
library(plyr)
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
dataNA <- ddply(data, ~ interval, transform, steps = impute.mean(steps))
dataNA <- dataNA[order(dataNA$date), ]
library(dplyr)
dataNA2 <- group_by(dataNA, date) %>%
summarise(total_steps = sum(steps))
hist(dataNA2$total_steps, col="red")
mean(dataNA2$total_steps)
median(dataNA2$total_steps)
View(dataNA)
View(data)
data2 <- group_by(data, date) %>%
filter(!is.na(steps)) %>%
summarise(total_steps = sum(steps))
hist(data2$total_steps, col="red")
mean(data2$total_steps, na.rm=TRUE)
median(data2$total_steps, na.rm=TRUE)
dataNA3 <- group_by(dataNA, interval) %>%
summarise(avg_steps = mean(steps))
plot(data3$interval, dataNA3$avg_steps
, type="l", col="red"
, main="Daily Activity Pattern"
, xlab="5-minute Interval", ylab="Average of Steps")
dataNA3 <- group_by(dataNA, interval) %>%
summarise(avg_steps = mean(steps))
plot(dataNA3$interval, dataNA3$avg_steps
, type="l", col="red"
, main="Daily Activity Pattern"
, xlab="5-minute Interval", ylab="Average of Steps")
dataNA3 <- group_by(dataNA, interval) %>%
summarise(avg_steps = mean(steps))
plot(dataNA3$interval, dataNA3$avg_steps
, type="l", col="red"
, main="Daily Activity Pattern"
, xlab="5-minute Interval", ylab="Average of Steps")
?weekdays?
()
?weekdays()
dataweek <- weekdays(dataNA3$date)
class(dataNA3$date)
View(dataNA3)
datadays <- mutate(dataNA, weekdays = weekdays(dataNA$date)
)
class(dataNA$date)
dataNA$date <- as.character(dataNA$date)
class(dataNA$date)
dataNA$date <- as.Date(dataNA$date)
class(dataNA$date)
View(dataNA)
datadays <- mutate(dataNA, weekdays = weekdays(dataNA$date))
View(datadays)
class(datadays$weekdays)
?factor
View(datadays)
datadays$weekdays2[datadays$weekdays==c("lunes", "martes","miércoles", "jueves", "viernes")] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="lunes"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="martes"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="miércoles"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="jueves"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="viernes"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="domingo"] <- "Weekend"
datadays$weekdays2[datadays$weekdays=="sábado"] <- "Weekend"
tail(datadays)
?as.factor
Sys.setlocale("LC_TIME", "English")
dataNA$date <- as.character(dataNA$date)
dataNA$date <- as.Date(dataNA$date)
datadays <- mutate(dataNA, weekdays = weekdays(dataNA$date))
datadays$weekdays2[datadays$weekdays=="monday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="tuesday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="wednesday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="thursday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="friday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="sturday"] <- "Weekend"
datadays$weekdays2[datadays$weekdays=="sunday"] <- "Weekend"
datadays$weekdays2 <- as.factor(datadays$weekdays2)
datadays2 <- group_by(datadays, interval, weekdays2) %>%
summarise(avg_steps = mean(steps))
View(datadays2)
View(datadays)
Sys.setlocale("LC_TIME", "English")
dataNA$date <- as.character(dataNA$date)
dataNA$date <- as.Date(dataNA$date)
datadays <- mutate(dataNA, weekdays = weekdays(dataNA$date))
datadays$weekdays2[datadays$weekdays=="Monday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="Tuesday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="Wednesday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="Thursday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="Friday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="sturday"] <- "Weekend"
datadays$weekdays2[datadays$weekdays=="sunday"] <- "Weekend"
datadays$weekdays2 <- as.factor(datadays$weekdays2)
datadays2 <- group_by(datadays, interval, weekdays2) %>%
summarise(avg_steps = mean(steps))
View(datadays2)
Sys.setlocale("LC_TIME", "English")
dataNA$date <- as.character(dataNA$date)
dataNA$date <- as.Date(dataNA$date)
datadays <- mutate(dataNA, weekdays = weekdays(dataNA$date))
datadays$weekdays2[datadays$weekdays=="Monday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="Tuesday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="Wednesday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="Thursday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="Friday"] <- "Weekday"
datadays$weekdays2[datadays$weekdays=="Saturday"] <- "Weekend"
datadays$weekdays2[datadays$weekdays=="Sunday"] <- "Weekend"
datadays$weekdays2 <- as.factor(datadays$weekdays2)
datadays2 <- group_by(datadays, interval, weekdays2) %>%
summarise(avg_steps = mean(steps))
View(datadays2)
View(datadays2)
library(lattice)
xyplot(avg_steps ~ interval | weekdays2)
xyplot(avg_steps ~ interval | weekdays2, data = datadays2)
xyplot(avg_steps ~ interval | weekdays2, data = datadays2, layout = c(1,2))
xyplot(avg_steps ~ interval | weekdays2, data = datadays2, layout = c(1,2), type="l")
